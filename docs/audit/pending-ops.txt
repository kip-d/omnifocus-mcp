src/omnifocus/OmniAutomation.ts:export function setPendingOperationsTracker(tracker: Set<Promise<unknown>>) {
src/omnifocus/OmniAutomation.ts:    // Don't await here - we need to return the SAME promise that's tracked in pendingOperations
src/index.ts:import { setPendingOperationsTracker } from './omnifocus/OmniAutomation.js';
src/index.ts:const pendingOperations = new Set<Promise<unknown>>();
src/index.ts:  setPendingOperationsTracker(pendingOperations);
src/index.ts:        pendingOperations.delete(warmingPromise);
src/index.ts:    pendingOperations.add(warmingPromise);
src/index.ts:    if (pendingOperations.size > 0) {
src/index.ts:      logger.info(`Waiting for ${pendingOperations.size} pending operations...`);
src/index.ts:        await Promise.allSettled([...pendingOperations]);
